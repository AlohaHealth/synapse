apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "aloha-matrix.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "aloha-matrix.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: aloha-matrix
      release: {{ .Release.Name }}
  serviceName: {{ include "aloha-matrix.name" . }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "aloha-matrix.labels" . | indent 8 }}
    spec:
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      initContainers:
      # Allow synapse write permissions on the synapse /data directory
      # https://github.com/kubernetes/kubernetes/issues/2630#issuecomment-384042097
      - name: {{ .Chart.Name }}-preinit
        image: google/cloud-sdk:latest
        command: ["sh", "-c", "chown -R 991:991 /data; ls -la /data;"]
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
      # Generate the homeserver tls certs in an initContainer
      - name: {{ .Chart.Name }}-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # command: ["/start.py"]
        args: ["generate"]
        env:
        - name: SYNAPSE_SERVER_NAME
          value: {{ .Values.tenant.domain | quote }}
        - name: SYNAPSE_REPORT_STATS
          value: "no"
        - name: SYNAPSE_CONFIG_PATH
          value: "/data/homeserver-init.yml"
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
      # Update permissions on generated configuration resources
      - name: {{ .Chart.Name }}-postinit
        image: google/cloud-sdk:latest
        command: ["sh", "-c", "chown -R 991:991 /data; ls -la /data;"]
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
      containers:
      - name: cloudsql-proxy
        image: "{{ .Values.cloudsql.repository }}:{{ .Values.cloudsql.tag }}"
        imagePullPolicy: {{ .Values.cloudsql.pullPolicy }}
        command: ["/cloud_sql_proxy"]
        args:
        - "-instances={{ template "aloha-matrix.cloudsqlInstance" . }}=tcp:5432"
        - "-credential_file=/secrets/cloudsql/synapse-cloudsql-proxy.json"
        volumeMounts:
        - name: cloudsql-proxy
          mountPath: /secrets/cloudsql
          readOnly: true
      - name: synapse
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: SYNAPSE_CONFIG_PATH
          value: {{ .Values.synapse.config_path }}/homeserver.yaml
        ports:
        - name: clients
          containerPort: 8008
        - name: federation
          containerPort: 8448
        livenessProbe:
          httpGet:
            path: /_matrix/key/v2/server/auto
            port: clients
        readinessProbe:
          httpGet:
            path: /_matrix/key/v2/server/auto
            port: clients
        volumeMounts:
        - name: certs
          mountPath: /secrets/synapse
        - name: config
          mountPath: {{ .Values.synapse.config_path }}
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: certs
        secret:
          secretName: {{ template "aloha-matrix.name" . }}-tls
      - name: config
        configMap:
          name: {{ template "aloha-matrix.name" . }}-config
      - name: cloudsql-proxy
        secret:
          secretName: synapse-cloudsql-proxy
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        pv.beta.kubernetes.io/gid: "991"
      labels:
        app: {{ template "aloha-matrix.name" . }}
        tenant: {{ .Values.tenant.name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      securityContext:
        fsGroup: 991
      resources:
        requests:
          storage: {{ .Values.volumes.data.size }}
